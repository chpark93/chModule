# Catalog
server:
  port: 0
# Setting
spring:
  application:
    name: catalog-service
  session:
    store-type: redis
  # JPA
  jpa:
    hibernate:
      ddl-auto: create-drop
    generate-ddl: true
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
  data:
    redis:
      port: 6379
      host: localhost
  # Rabbitmq
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    openfeign:
      micrometer:
        enabled: true

# Eureka
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3_MULTI
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include: health, httptrace, info, metrics, prometheus

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
  level:
    com.ch.catalog: DEBUG
    org:
      hibernate:
        type:
          descriptor:
            sql: trace

# JPA Query log
decorator:
  datasource:
    p6spy:
      enable-logging: true
      multiline: true
