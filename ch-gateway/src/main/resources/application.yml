server:
  port: 8900
spring:
  application:
    name: gateway-service
  cloud:
    circuitbreaker:
      resilience4j:
        enabled: true
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 2s
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - OPTIONS
              - DELETE
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Global Filter
            preLogger: true
            postLogger: true
        - name: LoggingFilter
          args:
            baseMessage: Logging Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/public/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/catalog-service/(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

          #filters:
          #  - name: CircuitBreaker
          #    args:
          #      name: circuitBreaker
          #      fallbackUri: forward:/fallback/api-service
  # Rabbitmq
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  main:
    web-application-type: reactive

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

#resilience4j:
#  circuitbreaker:
#    configs:
#      default:
#        registerHealthIndicator: true
#        minimumNumberOfCalls: 5
#        failureRateThreshold: 50`
#        waitDurationInOpenState: 10s
#    instances:
#      circuitBreaker:
#        baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httpexchanges, busrefresh
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true